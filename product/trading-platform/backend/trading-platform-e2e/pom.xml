<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.agileinfra.trading.platform</groupId>
        <artifactId>trading-platform-root</artifactId>
        <version>0.0.1</version>
    </parent>
    <artifactId>trading-platform-e2e</artifactId>
    <properties>
        <account.server.debug.port>9602</account.server.debug.port>
        <account.server.http.health.url>http://localhost:${account.server.http.port}/actuator/health</account.server.http.health.url>
        <account.server.http.port>9600</account.server.http.port>
        <account.server.url>http://localhost:${account.server.http.port}</account.server.url>
        <account.server.ws.url>ws://localhost:${account.server.http.port}/portfolio</account.server.ws.url>
        <booking.server.debug.port>9502</booking.server.debug.port>
        <booking.server.http.health.url>http://localhost:${booking.server.http.port}/actuator/health</booking.server.http.health.url>
        <booking.server.http.port>9500</booking.server.http.port>
        <booking.server.url>http://localhost:${booking.server.http.port}</booking.server.url>
        <clock.server.debug.port>9702</clock.server.debug.port>
        <clock.server.http.health.url>http://localhost:${clock.server.http.port}/actuator/health</clock.server.http.health.url>
        <clock.server.http.port>9700</clock.server.http.port>
        <clock.server.url>http://localhost:${clock.server.http.port}</clock.server.url>
        <iam.server.debug.port>9802</iam.server.debug.port>
        <iam.server.http.health.url>http://localhost:${iam.server.http.port}/actuator/health</iam.server.http.health.url>
        <iam.server.http.port>9800</iam.server.http.port>
        <iam.server.url>http://localhost:${iam.server.http.port}</iam.server.url>
        <instrument.server.debug.port>9402</instrument.server.debug.port>
        <instrument.server.http.health.url>http://localhost:${instrument.server.http.port}/actuator/health</instrument.server.http.health.url>
        <instrument.server.http.port>9400</instrument.server.http.port>
        <instrument.server.url>http://localhost:${instrument.server.http.port}</instrument.server.url>
        <logging.level>INFO</logging.level>
        <market.server.debug.port>9302</market.server.debug.port>
        <market.server.http.health.url>http://localhost:${market.server.http.port}/actuator/health</market.server.http.health.url>
        <market.server.http.port>9300</market.server.http.port>
        <market.server.url>http://localhost:${market.server.http.port}</market.server.url>
        <messaging.server.debug.port>9102</messaging.server.debug.port>
        <messaging.server.http.health.url>http://localhost:${messaging.server.http.port}/actuator/health</messaging.server.http.health.url>
        <messaging.server.http.port>9101</messaging.server.http.port>
        <messaging.server.port>9100</messaging.server.port>
        <messaging.server.url>tcp://localhost:${messaging.server.port}</messaging.server.url>
        <persistence.client.driver>org.h2.Driver</persistence.client.driver>
        <persistence.server.base-dir>${java.io.tmpdir}</persistence.server.base-dir>
        <persistence.server.dbname>${persistence.server.schema}</persistence.server.dbname>
        <persistence.server.debug.port>9002</persistence.server.debug.port>
        <persistence.server.http.health.url>http://localhost:${persistence.server.http.port}/actuator/health</persistence.server.http.health.url>
        <persistence.server.http.port>9001</persistence.server.http.port>
        <persistence.server.password>secret</persistence.server.password>
        <persistence.server.port>9000</persistence.server.port>
        <persistence.server.schema>trading</persistence.server.schema>
        <persistence.server.url>jdbc:h2:tcp://localhost:${persistence.server.port}/${persistence.server.base-dir}/${persistence.server.dbname};DATABASE_TO_UPPER=FALSE;INIT=SET SCHEMA ${persistence.server.schema}</persistence.server.url>
        <persistence.server.user>trading_user</persistence.server.user>
        <spring.datasource.driver-class-name>${persistence.client.driver}</spring.datasource.driver-class-name>
        <spring.datasource.hikari.maximum-pool-size>3</spring.datasource.hikari.maximum-pool-size>
        <spring.datasource.password>${persistence.server.password}</spring.datasource.password>
        <spring.datasource.username>${persistence.server.user}</spring.datasource.username>
        <traffic.server.debug.port>9902</traffic.server.debug.port>
        <traffic.server.http.health.url>http://localhost:${traffic.server.http.port}/actuator/health</traffic.server.http.health.url>
        <traffic.server.http.port>9900</traffic.server.http.port>
        <traffic.server.url>http://localhost:${traffic.server.http.port}</traffic.server.url>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>io.agileinfra.trading.platform</groupId>
            <artifactId>trading-platform-messaging-producer-order</artifactId>
        </dependency>
        <dependency>
            <groupId>io.agileinfra.trading.platform</groupId>
            <artifactId>trading-platform-messaging-producer-price</artifactId>
        </dependency>
        <dependency>
            <groupId>io.agileinfra.trading.platform</groupId>
            <artifactId>trading-platform-messaging-producer-booking</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
        </dependency>
        <dependency>
            <groupId>io.agileinfra.trading.platform</groupId>
            <artifactId>trading-platform-persistence-server</artifactId>
        </dependency>
        <dependency>
            <groupId>io.agileinfra.trading.platform</groupId>
            <artifactId>trading-platform-messaging-server</artifactId>
        </dependency>
        <dependency>
            <groupId>io.agileinfra.trading.platform</groupId>
            <artifactId>trading-platform-clock-server</artifactId>
        </dependency>
        <dependency>
            <groupId>io.agileinfra.trading.platform</groupId>
            <artifactId>trading-platform-account-server</artifactId>
        </dependency>
        <dependency>
            <groupId>io.agileinfra.trading.platform</groupId>
            <artifactId>trading-platform-booking-server</artifactId>
        </dependency>
        <dependency>
            <groupId>io.agileinfra.trading.platform</groupId>
            <artifactId>trading-platform-instrument-server</artifactId>
        </dependency>
        <dependency>
            <groupId>io.agileinfra.trading.platform</groupId>
            <artifactId>trading-platform-market-server</artifactId>
        </dependency>
        <dependency>
            <groupId>io.agileinfra.trading.platform</groupId>
            <artifactId>trading-platform-iam-server</artifactId>
        </dependency>
        <dependency>
            <groupId>io.agileinfra.trading.platform</groupId>
            <artifactId>trading-platform-traffic-producer</artifactId>
        </dependency>
        <dependency>
            <groupId>io.agileinfra.trading.platform</groupId>
            <artifactId>trading-platform-clock-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.agileinfra.trading.platform</groupId>
            <artifactId>trading-platform-account-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.agileinfra.trading.platform</groupId>
            <artifactId>trading-platform-booking-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.agileinfra.trading.platform</groupId>
            <artifactId>trading-platform-instrument-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.agileinfra.trading.platform</groupId>
            <artifactId>trading-platform-market-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.agileinfra.trading.platform</groupId>
            <artifactId>trading-platform-iam-api</artifactId>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java8</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-spring</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>datatable</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>net.revelc.code</groupId>
                <artifactId>formatter-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>io.agileinfra.trading.platform</groupId>
                        <artifactId>trading-platform-build-tools</artifactId>
                        <version>${project.parent.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>e2e</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>set-system-properties</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>set-system-properties</goal>
                                </goals>
                                <configuration>
                                    <properties>
                                        <property>
                                            <name>spring.profiles.active</name>
                                            <value>e2e</value>
                                        </property>
                                        <property>
                                            <name>account.server.url</name>
                                            <value>${account.server.url}</value>
                                        </property>
                                        <property>
                                            <name>booking.server.url</name>
                                            <value>${booking.server.url}</value>
                                        </property>
                                        <property>
                                            <name>clock.server.url</name>
                                            <value>${clock.server.url}</value>
                                        </property>
                                        <property>
                                            <name>instrument.server.url</name>
                                            <value>${instrument.server.url}</value>
                                        </property>
                                        <property>
                                            <name>messaging.server.url</name>
                                            <value>${messaging.server.url}</value>
                                        </property>
                                        <property>
                                            <name>market.server.url</name>
                                            <value>${market.server.url}</value>
                                        </property>
                                        <property>
                                            <name>persistence.server.url</name>
                                            <value>${persistence.server.url}</value>
                                        </property>
                                        <property>
                                            <name>persistence.server.user</name>
                                            <value>${persistence.server.user}</value>
                                        </property>
                                        <property>
                                            <name>persistence.server.password</name>
                                            <value>${persistence.server.password}</value>
                                        </property>
                                        <property>
                                            <name>persistence.server.schema</name>
                                            <value>${persistence.server.schema}</value>
                                        </property>
                                        <property>
                                            <name>persistence.client.driver</name>
                                            <value>${persistence.client.driver}</value>
                                        </property>
                                        <property>
                                            <name>iam.server.url</name>
                                            <value>${iam.server.url}</value>
                                        </property>
                                        <property>
                                            <name>account.server.ws.url</name>
                                            <value>${account.server.ws.url}</value>
                                        </property>
                                    </properties>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>${sql-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>create-user-schema</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <sqlCommand>CREATE SCHEMA IF NOT EXISTS ${persistence.server.schema} AUTHORIZATION ${persistence.server.user};</sqlCommand>
                                </configuration>
                            </execution>
                            <execution>
                                <id>populate-db</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <orderFile>ascending</orderFile>
                                    <fileset>
                                        <basedir>${basedir}</basedir>
                                        <includes>
                                            <include>src/test/resources/sql/e2e.sql</include>
                                        </includes>
                                    </fileset>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>com.h2database</groupId>
                                <artifactId>h2</artifactId>
                                <version>${h2.version}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <url>jdbc:h2:tcp://localhost:${persistence.server.port}/${persistence.server.base-dir}/${persistence.server.dbname};DATABASE_TO_UPPER=false;USER=${persistence.server.user};PASSWORD=${persistence.server.password}</url>
                            <driver>${persistence.client.driver}</driver>
                            <username>${persistence.server.user}</username>
                            <password>${persistence.server.password}</password>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.flywaydb</groupId>
                        <artifactId>flyway-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>info</goal>
                                    <goal>clean</goal>
                                    <goal>migrate</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>com.h2database</groupId>
                                <artifactId>h2</artifactId>
                                <version>${h2.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>io.agileinfra.trading.platform</groupId>
                                <artifactId>trading-platform-persistence-configuration</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <driver>${persistence.client.driver}</driver>
                            <url>${persistence.server.url}</url>
                            <user>${persistence.server.user}</user>
                            <password>${persistence.server.password}</password>
                            <schemas>
                                <schema>${persistence.server.schema}</schema>
                            </schemas>
                            <baselineOnMigrate>true</baselineOnMigrate>
                            <placeholderPrefix>$_</placeholderPrefix>
                            <locations>
                                <location>db/migrations</location>
                            </locations>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.bazaarvoice.maven.plugins</groupId>
                        <artifactId>process-exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>run-persistence-server</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <name>persistence-server</name>
                                    <waitForInterrupt>false</waitForInterrupt>
                                    <healthcheckUrl>${persistence.server.http.health.url}</healthcheckUrl>
                                    <waitAfterLaunch>600</waitAfterLaunch>
                                    <arguments>
                                        <argument>java</argument>
                                        <argument>-Xdebug</argument>
                                        <argument>-Xrunjdwp:server=y,transport=dt_socket,address=${persistence.server.debug.port},suspend=n</argument>
                                        <argument>-jar</argument>
                                        <argument>${user.home}/.m2/repository/io/agileinfra/trading/platform/trading-platform-persistence-server/${project.parent.version}/trading-platform-persistence-server-${project.parent.version}.jar</argument>
                                        <argument>--server.port=${persistence.server.http.port}</argument>
                                        <argument>--persistence.server.port=${persistence.server.port}</argument>
                                        <argument>--persistence.server.base-dir=${persistence.server.base-dir}</argument>
                                        <argument>--persistence.server.user=${persistence.server.user}</argument>
                                        <argument>--persistence.server.password=${persistence.server.password}</argument>
                                        <argument>--logging.level.io.agileinfra=${logging.level}</argument>
                                        <argument>--logging.level.org.springframework=WARN</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>run-messaging-server</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <name>messaging-server</name>
                                    <waitForInterrupt>false</waitForInterrupt>
                                    <healthcheckUrl>${messaging.server.http.health.url}</healthcheckUrl>
                                    <arguments>
                                        <argument>java</argument>
                                        <argument>-Xdebug</argument>
                                        <argument>-Xrunjdwp:server=y,transport=dt_socket,address=${messaging.server.debug.port},suspend=n</argument>
                                        <argument>-jar</argument>
                                        <argument>${user.home}/.m2/repository/io/agileinfra/trading/platform/trading-platform-messaging-server/${project.parent.version}/trading-platform-messaging-server-${project.parent.version}.jar</argument>
                                        <argument>--server.port=${messaging.server.http.port}</argument>
                                        <argument>--spring.activemq.broker-url=${messaging.server.url}</argument>
                                        <argument>--logging.level.io.agileinfra=${logging.level}</argument>
                                        <argument>--logging.level.org.springframework=WARN</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>run-clock-server</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <name>clock-server</name>
                                    <waitForInterrupt>false</waitForInterrupt>
                                    <healthcheckUrl>${clock.server.http.health.url}</healthcheckUrl>
                                    <arguments>
                                        <argument>java</argument>
                                        <argument>-Xdebug</argument>
                                        <argument>-Xrunjdwp:server=y,transport=dt_socket,address=${clock.server.debug.port},suspend=n</argument>
                                        <argument>-jar</argument>
                                        <argument>${user.home}/.m2/repository/io/agileinfra/trading/platform/trading-platform-clock-server/${project.parent.version}/trading-platform-clock-server-${project.parent.version}.jar</argument>
                                        <argument>--server.port=${clock.server.http.port}</argument>
                                        <argument>--logging.level.io.agileinfra=${logging.level}</argument>
                                        <argument>--logging.level.org.springframework=WARN</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>run-instrument-server</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <name>instrument-server</name>
                                    <waitForInterrupt>false</waitForInterrupt>
                                    <healthcheckUrl>${instrument.server.http.health.url}</healthcheckUrl>
                                    <arguments>
                                        <argument>java</argument>
                                        <argument>-Xdebug</argument>
                                        <argument>-Xrunjdwp:server=y,transport=dt_socket,address=${instrument.server.debug.port},suspend=n</argument>
                                        <argument>-jar</argument>
                                        <argument>${user.home}/.m2/repository/io/agileinfra/trading/platform/trading-platform-instrument-server/${project.parent.version}/trading-platform-instrument-server-${project.parent.version}.jar</argument>
                                        <argument>--server.port=${instrument.server.http.port}</argument>
                                        <argument>--logging.level.io.agileinfra=${logging.level}</argument>
                                        <argument>--logging.level.org.springframework=WARN</argument>
                                        <argument>--spring.datasource.hikari.maximum-pool-size=${spring.datasource.hikari.maximum-pool-size}</argument>
                                        <argument>--spring.datasource.driver-class-name=${spring.datasource.driver-class-name}</argument>
                                        <argument>--spring.datasource.username=${spring.datasource.username}</argument>
                                        <argument>--spring.datasource.password=${spring.datasource.password}</argument>
                                        <argument>--spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect</argument>
                                        <argument>--spring.jpa.show-sql=false</argument>
                                        <argument>--spring.jpa.open-in-view=false</argument>
                                        <argument>--spring.jpa.hibernate.ddl-auto=validate</argument>
                                        <argument>--spring.datasource.url=${persistence.server.url}</argument>
                                        <argument>--messaging.server.url=${messaging.server.url}</argument>
                                        <argument>--clock.server.url=${clock.server.url}</argument>
                                        <argument>--spring.profiles.active=e2e</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>run-account-server</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <name>account-server</name>
                                    <waitForInterrupt>false</waitForInterrupt>
                                    <healthcheckUrl>${account.server.http.health.url}</healthcheckUrl>
                                    <arguments>
                                        <argument>java</argument>
                                        <argument>-Xdebug</argument>
                                        <argument>-Xrunjdwp:server=y,transport=dt_socket,address=${account.server.debug.port},suspend=n</argument>
                                        <argument>-jar</argument>
                                        <argument>${user.home}/.m2/repository/io/agileinfra/trading/platform/trading-platform-account-server/${project.parent.version}/trading-platform-account-server-${project.parent.version}.jar</argument>
                                        <argument>--server.port=${account.server.http.port}</argument>
                                        <argument>--logging.level.io.agileinfra=${logging.level}</argument>
                                        <argument>--logging.level.org.springframework=WARN</argument>
                                        <argument>--logging.level.org.springframework.messaging.simp.user=DEBUG</argument>
                                        <argument>--spring.datasource.hikari.maximum-pool-size=${spring.datasource.hikari.maximum-pool-size}</argument>
                                        <argument>--spring.datasource.driver-class-name=${spring.datasource.driver-class-name}</argument>
                                        <argument>--spring.datasource.username=${spring.datasource.username}</argument>
                                        <argument>--spring.datasource.password=${spring.datasource.password}</argument>
                                        <argument>--spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect</argument>
                                        <argument>--spring.jpa.show-sql=false</argument>
                                        <argument>--spring.jpa.open-in-view=false</argument>
                                        <argument>--spring.jpa.hibernate.ddl-auto=validate</argument>
                                        <argument>--spring.datasource.url=${persistence.server.url}</argument>
                                        <argument>--messaging.server.url=${messaging.server.url}</argument>
                                        <argument>--clock.server.url=${clock.server.url}</argument>
                                        <argument>--instrument.server.url=${instrument.server.url}</argument>
                                        <argument>--spring.profiles.active=e2e</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>run-booking-server</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <name>booking-server</name>
                                    <waitForInterrupt>false</waitForInterrupt>
                                    <healthcheckUrl>${booking.server.http.health.url}</healthcheckUrl>
                                    <arguments>
                                        <argument>java</argument>
                                        <argument>-Xdebug</argument>
                                        <argument>-Xrunjdwp:server=y,transport=dt_socket,address=${booking.server.debug.port},suspend=n</argument>
                                        <argument>-jar</argument>
                                        <argument>${user.home}/.m2/repository/io/agileinfra/trading/platform/trading-platform-booking-server/${project.parent.version}/trading-platform-booking-server-${project.parent.version}.jar</argument>
                                        <argument>--server.port=${booking.server.http.port}</argument>
                                        <argument>--logging.level.io.agileinfra=${logging.level}</argument>
                                        <argument>--logging.level.org.springframework=WARN</argument>
                                        <argument>--spring.datasource.hikari.maximum-pool-size=${spring.datasource.hikari.maximum-pool-size}</argument>
                                        <argument>--spring.datasource.driver-class-name=${spring.datasource.driver-class-name}</argument>
                                        <argument>--spring.datasource.username=${spring.datasource.username}</argument>
                                        <argument>--spring.datasource.password=${spring.datasource.password}</argument>
                                        <argument>--spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect</argument>
                                        <argument>--spring.jpa.show-sql=false</argument>
                                        <argument>--spring.jpa.open-in-view=false</argument>
                                        <argument>--spring.jpa.hibernate.ddl-auto=validate</argument>
                                        <argument>--spring.datasource.url=${persistence.server.url}</argument>
                                        <argument>--messaging.server.url=${messaging.server.url}</argument>
                                        <argument>--clock.server.url=${clock.server.url}</argument>
                                        <argument>--account.server.url=${account.server.url}</argument>
                                        <argument>--instrument.server.url=${instrument.server.url}</argument>
                                        <argument>--spring.profiles.active=e2e</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>run-market-server</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <name>market-server</name>
                                    <waitForInterrupt>false</waitForInterrupt>
                                    <healthcheckUrl>${market.server.http.health.url}</healthcheckUrl>
                                    <arguments>
                                        <argument>java</argument>
                                        <argument>-Xdebug</argument>
                                        <argument>-Xrunjdwp:server=y,transport=dt_socket,address=${market.server.debug.port},suspend=n</argument>
                                        <argument>-jar</argument>
                                        <argument>${user.home}/.m2/repository/io/agileinfra/trading/platform/trading-platform-market-server/${project.parent.version}/trading-platform-market-server-${project.parent.version}.jar</argument>
                                        <argument>--server.port=${market.server.http.port}</argument>
                                        <argument>--logging.level.io.agileinfra=${logging.level}</argument>
                                        <argument>--logging.level.org.springframework=WARN</argument>
                                        <argument>--messaging.server.url=${messaging.server.url}</argument>
                                        <argument>--clock.server.url=${clock.server.url}</argument>
                                        <argument>--account.server.url=${account.server.url}</argument>
                                        <argument>--spring.profiles.active=e2e</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>run-iam-server</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <name>iam-server</name>
                                    <waitForInterrupt>false</waitForInterrupt>
                                    <healthcheckUrl>${iam.server.http.health.url}</healthcheckUrl>
                                    <arguments>
                                        <argument>java</argument>
                                        <argument>-Xdebug</argument>
                                        <argument>-Xrunjdwp:server=y,transport=dt_socket,address=${iam.server.debug.port},suspend=n</argument>
                                        <argument>-jar</argument>
                                        <argument>${user.home}/.m2/repository/io/agileinfra/trading/platform/trading-platform-iam-server/${project.parent.version}/trading-platform-iam-server-${project.parent.version}.jar</argument>
                                        <argument>--server.port=${iam.server.http.port}</argument>
                                        <argument>--logging.level.io.agileinfra=${logging.level}</argument>
                                        <argument>--logging.level.org.springframework=WARN</argument>
                                        <argument>--spring.datasource.hikari.maximum-pool-size=${spring.datasource.hikari.maximum-pool-size}</argument>
                                        <argument>--spring.datasource.driver-class-name=${spring.datasource.driver-class-name}</argument>
                                        <argument>--spring.datasource.username=${spring.datasource.username}</argument>
                                        <argument>--spring.datasource.password=${spring.datasource.password}</argument>
                                        <argument>--spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect</argument>
                                        <argument>--spring.jpa.show-sql=false</argument>
                                        <argument>--spring.jpa.open-in-view=false</argument>
                                        <argument>--spring.jpa.hibernate.ddl-auto=validate</argument>
                                        <argument>--spring.datasource.url=${persistence.server.url}</argument>
                                        <argument>--clock.server.url=${clock.server.url}</argument>
                                        <argument>--spring.profiles.active=e2e</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <forkCount>0</forkCount>
                            <useSystemClassLoader>false</useSystemClassLoader>
                            <includes>
                                <include>**/TradingPlatformE2E.java</include>
                            </includes>
                            <trimStackTrace>false</trimStackTrace>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>standalone</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>set-system-properties</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>set-system-properties</goal>
                                </goals>
                                <configuration>
                                    <properties>
                                        <property>
                                            <name>account.server.url</name>
                                            <value>${account.server.url}</value>
                                        </property>
                                        <property>
                                            <name>booking.server.url</name>
                                            <value>${booking.server.url}</value>
                                        </property>
                                        <property>
                                            <name>clock.server.url</name>
                                            <value>${clock.server.url}</value>
                                        </property>
                                        <property>
                                            <name>instrument.server.url</name>
                                            <value>${instrument.server.url}</value>
                                        </property>
                                        <property>
                                            <name>messaging.server.url</name>
                                            <value>${messaging.server.url}</value>
                                        </property>
                                        <property>
                                            <name>market.server.url</name>
                                            <value>${market.server.url}</value>
                                        </property>
                                        <property>
                                            <name>persistence.server.url</name>
                                            <value>${persistence.server.url}</value>
                                        </property>
                                        <property>
                                            <name>persistence.server.user</name>
                                            <value>${persistence.server.user}</value>
                                        </property>
                                        <property>
                                            <name>persistence.server.password</name>
                                            <value>${persistence.server.password}</value>
                                        </property>
                                        <property>
                                            <name>persistence.server.schema</name>
                                            <value>${persistence.server.schema}</value>
                                        </property>
                                        <property>
                                            <name>persistence.client.driver</name>
                                            <value>${persistence.client.driver}</value>
                                        </property>
                                        <property>
                                            <name>iam.server.url</name>
                                            <value>${iam.server.url}</value>
                                        </property>
                                        <property>
                                            <name>account.server.ws.url</name>
                                            <value>${account.server.ws.url}</value>
                                        </property>
                                    </properties>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>${sql-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>create-user-schema</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <sqlCommand>CREATE SCHEMA IF NOT EXISTS ${persistence.server.schema} AUTHORIZATION ${persistence.server.user};</sqlCommand>
                                </configuration>
                            </execution>
                            <execution>
                                <id>populate-db</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <orderFile>ascending</orderFile>
                                    <fileset>
                                        <basedir>${basedir}</basedir>
                                        <includes>
                                            <include>src/test/resources/sql/e2e.sql</include>
                                            <include>src/test/resources/sql/standalone.sql</include>
                                        </includes>
                                    </fileset>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>com.h2database</groupId>
                                <artifactId>h2</artifactId>
                                <version>${h2.version}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <url>jdbc:h2:tcp://localhost:${persistence.server.port}/${persistence.server.base-dir}/${persistence.server.dbname};DATABASE_TO_UPPER=false;USER=${persistence.server.user};PASSWORD=${persistence.server.password}</url>
                            <driver>${persistence.client.driver}</driver>
                            <username>${persistence.server.user}</username>
                            <password>${persistence.server.password}</password>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.flywaydb</groupId>
                        <artifactId>flyway-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>info</goal>
                                    <goal>clean</goal>
                                    <goal>migrate</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>com.h2database</groupId>
                                <artifactId>h2</artifactId>
                                <version>${h2.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>io.agileinfra.trading.platform</groupId>
                                <artifactId>trading-platform-persistence-configuration</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <driver>${persistence.client.driver}</driver>
                            <url>${persistence.server.url}</url>
                            <user>${persistence.server.user}</user>
                            <password>${persistence.server.password}</password>
                            <schemas>
                                <schema>${persistence.server.schema}</schema>
                            </schemas>
                            <baselineOnMigrate>true</baselineOnMigrate>
                            <placeholderPrefix>$_</placeholderPrefix>
                            <locations>
                                <location>db/migrations</location>
                            </locations>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.bazaarvoice.maven.plugins</groupId>
                        <artifactId>process-exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>run-persistence-server</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <name>persistence-server</name>
                                    <waitForInterrupt>false</waitForInterrupt>
                                    <healthcheckUrl>${persistence.server.http.health.url}</healthcheckUrl>
                                    <waitAfterLaunch>600</waitAfterLaunch>
                                    <arguments>
                                        <argument>java</argument>
                                        <argument>-Xdebug</argument>
                                        <argument>-Xrunjdwp:server=y,transport=dt_socket,address=${persistence.server.debug.port},suspend=n</argument>
                                        <argument>-jar</argument>
                                        <argument>${user.home}/.m2/repository/io/agileinfra/trading/platform/trading-platform-persistence-server/${project.parent.version}/trading-platform-persistence-server-${project.parent.version}.jar</argument>
                                        <argument>--server.port=${persistence.server.http.port}</argument>
                                        <argument>--persistence.server.port=${persistence.server.port}</argument>
                                        <argument>--persistence.server.base-dir=${persistence.server.base-dir}</argument>
                                        <argument>--persistence.server.user=${persistence.server.user}</argument>
                                        <argument>--persistence.server.password=${persistence.server.password}</argument>
                                        <argument>--logging.level.io.agileinfra=${logging.level}</argument>
                                        <argument>--logging.level.org.springframework=WARN</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>run-messaging-server</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <name>messaging-server</name>
                                    <waitForInterrupt>false</waitForInterrupt>
                                    <healthcheckUrl>${messaging.server.http.health.url}</healthcheckUrl>
                                    <arguments>
                                        <argument>java</argument>
                                        <argument>-Xdebug</argument>
                                        <argument>-Xrunjdwp:server=y,transport=dt_socket,address=${messaging.server.debug.port},suspend=n</argument>
                                        <argument>-jar</argument>
                                        <argument>${user.home}/.m2/repository/io/agileinfra/trading/platform/trading-platform-messaging-server/${project.parent.version}/trading-platform-messaging-server-${project.parent.version}.jar</argument>
                                        <argument>--server.port=${messaging.server.http.port}</argument>
                                        <argument>--spring.activemq.broker-url=${messaging.server.url}</argument>
                                        <argument>--logging.level.io.agileinfra=${logging.level}</argument>
                                        <argument>--logging.level.org.springframework=WARN</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>run-instrument-server</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <name>instrument-server</name>
                                    <waitForInterrupt>false</waitForInterrupt>
                                    <healthcheckUrl>${instrument.server.http.health.url}</healthcheckUrl>
                                    <arguments>
                                        <argument>java</argument>
                                        <argument>-Xdebug</argument>
                                        <argument>-Xrunjdwp:server=y,transport=dt_socket,address=${instrument.server.debug.port},suspend=n</argument>
                                        <argument>-jar</argument>
                                        <argument>${user.home}/.m2/repository/io/agileinfra/trading/platform/trading-platform-instrument-server/${project.parent.version}/trading-platform-instrument-server-${project.parent.version}.jar</argument>
                                        <argument>--server.port=${instrument.server.http.port}</argument>
                                        <argument>--logging.level.io.agileinfra=${logging.level}</argument>
                                        <argument>--logging.level.org.springframework=WARN</argument>
                                        <argument>--spring.datasource.hikari.maximum-pool-size=${spring.datasource.hikari.maximum-pool-size}</argument>
                                        <argument>--spring.datasource.driver-class-name=${spring.datasource.driver-class-name}</argument>
                                        <argument>--spring.datasource.username=${spring.datasource.username}</argument>
                                        <argument>--spring.datasource.password=${spring.datasource.password}</argument>
                                        <argument>--spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect</argument>
                                        <argument>--spring.jpa.show-sql=false</argument>
                                        <argument>--spring.jpa.open-in-view=false</argument>
                                        <argument>--spring.jpa.hibernate.ddl-auto=validate</argument>
                                        <argument>--spring.datasource.url=${persistence.server.url}</argument>
                                        <argument>--messaging.server.url=${messaging.server.url}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>run-account-server</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <name>account-server</name>
                                    <waitForInterrupt>false</waitForInterrupt>
                                    <healthcheckUrl>${account.server.http.health.url}</healthcheckUrl>
                                    <arguments>
                                        <argument>java</argument>
                                        <argument>-Xdebug</argument>
                                        <argument>-Xrunjdwp:server=y,transport=dt_socket,address=${account.server.debug.port},suspend=n</argument>
                                        <argument>-jar</argument>
                                        <argument>${user.home}/.m2/repository/io/agileinfra/trading/platform/trading-platform-account-server/${project.parent.version}/trading-platform-account-server-${project.parent.version}.jar</argument>
                                        <argument>--server.port=${account.server.http.port}</argument>
                                        <argument>--logging.level.io.agileinfra=${logging.level}</argument>
                                        <argument>--logging.level.org.springframework=WARN</argument>
                                        <argument>--logging.level.org.springframework.messaging.simp.user=DEBUG</argument>
                                        <argument>--spring.datasource.hikari.maximum-pool-size=${spring.datasource.hikari.maximum-pool-size}</argument>
                                        <argument>--spring.datasource.driver-class-name=${spring.datasource.driver-class-name}</argument>
                                        <argument>--spring.datasource.username=${spring.datasource.username}</argument>
                                        <argument>--spring.datasource.password=${spring.datasource.password}</argument>
                                        <argument>--spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect</argument>
                                        <argument>--spring.jpa.show-sql=false</argument>
                                        <argument>--spring.jpa.open-in-view=false</argument>
                                        <argument>--spring.jpa.hibernate.ddl-auto=validate</argument>
                                        <argument>--spring.datasource.url=${persistence.server.url}</argument>
                                        <argument>--messaging.server.url=${messaging.server.url}</argument>
                                        <argument>--instrument.server.url=${instrument.server.url}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>run-booking-server</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <name>booking-server</name>
                                    <waitForInterrupt>false</waitForInterrupt>
                                    <healthcheckUrl>${booking.server.http.health.url}</healthcheckUrl>
                                    <arguments>
                                        <argument>java</argument>
                                        <argument>-Xdebug</argument>
                                        <argument>-Xrunjdwp:server=y,transport=dt_socket,address=${booking.server.debug.port},suspend=n</argument>
                                        <argument>-jar</argument>
                                        <argument>${user.home}/.m2/repository/io/agileinfra/trading/platform/trading-platform-booking-server/${project.parent.version}/trading-platform-booking-server-${project.parent.version}.jar</argument>
                                        <argument>--server.port=${booking.server.http.port}</argument>
                                        <argument>--logging.level.io.agileinfra=${logging.level}</argument>
                                        <argument>--logging.level.org.springframework=WARN</argument>
                                        <argument>--spring.datasource.hikari.maximum-pool-size=${spring.datasource.hikari.maximum-pool-size}</argument>
                                        <argument>--spring.datasource.driver-class-name=${spring.datasource.driver-class-name}</argument>
                                        <argument>--spring.datasource.username=${spring.datasource.username}</argument>
                                        <argument>--spring.datasource.password=${spring.datasource.password}</argument>
                                        <argument>--spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect</argument>
                                        <argument>--spring.jpa.show-sql=false</argument>
                                        <argument>--spring.jpa.open-in-view=false</argument>
                                        <argument>--spring.jpa.hibernate.ddl-auto=validate</argument>
                                        <argument>--spring.datasource.url=${persistence.server.url}</argument>
                                        <argument>--messaging.server.url=${messaging.server.url}</argument>
                                        <argument>--account.server.url=${account.server.url}</argument>
                                        <argument>--instrument.server.url=${instrument.server.url}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>run-market-server</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <name>market-server</name>
                                    <waitForInterrupt>false</waitForInterrupt>
                                    <healthcheckUrl>${market.server.http.health.url}</healthcheckUrl>
                                    <arguments>
                                        <argument>java</argument>
                                        <argument>-Xdebug</argument>
                                        <argument>-Xrunjdwp:server=y,transport=dt_socket,address=${market.server.debug.port},suspend=n</argument>
                                        <argument>-jar</argument>
                                        <argument>${user.home}/.m2/repository/io/agileinfra/trading/platform/trading-platform-market-server/${project.parent.version}/trading-platform-market-server-${project.parent.version}.jar</argument>
                                        <argument>--server.port=${market.server.http.port}</argument>
                                        <argument>--logging.level.io.agileinfra=${logging.level}</argument>
                                        <argument>--logging.level.org.springframework=WARN</argument>
                                        <argument>--messaging.server.url=${messaging.server.url}</argument>
                                        <argument>--account.server.url=${account.server.url}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>run-iam-server</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <name>iam-server</name>
                                    <waitForInterrupt>false</waitForInterrupt>
                                    <healthcheckUrl>${iam.server.http.health.url}</healthcheckUrl>
                                    <arguments>
                                        <argument>java</argument>
                                        <argument>-Xdebug</argument>
                                        <argument>-Xrunjdwp:server=y,transport=dt_socket,address=${iam.server.debug.port},suspend=n</argument>
                                        <argument>-jar</argument>
                                        <argument>${user.home}/.m2/repository/io/agileinfra/trading/platform/trading-platform-iam-server/${project.parent.version}/trading-platform-iam-server-${project.parent.version}.jar</argument>
                                        <argument>--server.port=${iam.server.http.port}</argument>
                                        <argument>--logging.level.io.agileinfra=${logging.level}</argument>
                                        <argument>--logging.level.org.springframework=WARN</argument>
                                        <argument>--spring.datasource.hikari.maximum-pool-size=${spring.datasource.hikari.maximum-pool-size}</argument>
                                        <argument>--spring.datasource.driver-class-name=${spring.datasource.driver-class-name}</argument>
                                        <argument>--spring.datasource.username=${spring.datasource.username}</argument>
                                        <argument>--spring.datasource.password=${spring.datasource.password}</argument>
                                        <argument>--spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect</argument>
                                        <argument>--spring.jpa.show-sql=false</argument>
                                        <argument>--spring.jpa.open-in-view=false</argument>
                                        <argument>--spring.jpa.hibernate.ddl-auto=validate</argument>
                                        <argument>--spring.datasource.url=${persistence.server.url}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>run-traffic-server</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <name>traffic-server</name>
                                    <waitForInterrupt>true</waitForInterrupt>
                                    <healthcheckUrl>${traffic.server.http.health.url}</healthcheckUrl>
                                    <arguments>
                                        <argument>java</argument>
                                        <argument>-Xdebug</argument>
                                        <argument>-Xrunjdwp:server=y,transport=dt_socket,address=${traffic.server.debug.port},suspend=n</argument>
                                        <argument>-jar</argument>
                                        <argument>${user.home}/.m2/repository/io/agileinfra/trading/platform/trading-platform-traffic-producer/${project.parent.version}/trading-platform-traffic-producer-${project.parent.version}.jar</argument>
                                        <argument>--server.port=${traffic.server.http.port}</argument>
                                        <argument>--logging.level.io.agileinfra=${logging.level}</argument>
                                        <argument>--logging.level.org.springframework=WARN</argument>
                                        <argument>--messaging.server.url=${messaging.server.url}</argument>
                                        <!--                                        <argument>&#45;&#45;clock.server.url=${clock.server.url}</argument>-->
                                        <argument>--account.server.url=${account.server.url}</argument>
                                        <argument>--instrument.server.url=${instrument.server.url}</argument>
                                        <argument>--start=${start}</argument>
                                        <argument>--duration=${duration}</argument>
                                        <argument>--trades.delay-interval=${trades.delay-interval}</argument>
                                        <argument>--trades.transition-interval=${trades.transition-interval}</argument>
                                        <argument>--trades.max-quantity=${trades.max-quantity}</argument>
                                        <argument>--prices.delay-interval=${prices.delay-interval}</argument>
                                        <argument>--prices.max-variation=${prices.max-variation}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
